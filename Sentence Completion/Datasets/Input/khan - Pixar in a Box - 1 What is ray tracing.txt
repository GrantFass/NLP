Hi, my name is Susan Fong and I'm a
rendering technical director here at Pixar Animation Studios my job is to
make sure that the images you see in the theater are created as quickly and
efficiently as possible now that's a big job because of
Christophe described in the previous video, rendering is an extremely
complicated process requiring thousands of computers all working together to
render our films. The render farm is where we keep all these computers, but what are these computers doing exactly? That's the topic of this lesson. In the first part
we'll take a geometric look at a renderer works. In the second part of of the lesson, we'll
look at some of the equations and algebra that are needed to write a
render as a computer program. So let's get started! Let's start with the
drastically simplified scene from Up. This object lives in three dimensions, as we can see as we navigate around it.  Just like live-action filmmaking, we need to
place a camera inside the scene. In computer graphics we call this a virtual
camera. We first pick a location for our virtual camera they'll be used to create the
image. It's shown here in white. We also need to decide which direction our camera is
pointed. That's shown here in red. Next we erect a plane upon which we'll form the
image. It's called the image plane, and represents what the virtual camera will
see. Notice it is perpendicular to the viewing direction. The image plane is
broken up into a grid of pixels that will make up the image. In this
interactive the first two sliders allow you to rotate your camera around the
scene. The job of the renderer sounds simple. It
must determine a color for each of these pixels. This is kind of like paint by
numbers where the image plane is serving as the canvas on which the renderer is
painting. Now I'm only showing you a few pixels in this example. Our real images
are made up of more than two million pixels. Over the years a number of
different rendering algorithms have been developed. one of the most elegant and
versatile algorithms is called ray tracing. Here's how it works: to determine a
color, for say this pixel, a ray tracer constructs a mathematical ray that starts at the camera, crosses the center of the pixel, and then extends off into the scene. Kind
of like a laser beam pointed at the pixel but from the camera. The ray
tracer computes the closest intersection point between the scene objects and this
ray. It then determines the color of the intersected object at that point, and
paints the picture that color. So this pixel would be colored brown, this one yellow,
and so forth for the other pixels. This process is done for all of the pixels in
the image. Fancier versions of ray tracing can
create more subtle effects, like soft shadows and variations in lighting that
helped to create different moods. The ray tracing process leads to a bunch of other
questions, like how are intersection points determined? And once that intersection
point is determined, how do we figure out what color it is? These mysteries and more will be revealed in the remainder of the tutorial. In this first exercise, you can
practice some ray tracing yourself.